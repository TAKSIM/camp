# -*- coding: utf-8 -*-
from PyQt4 import QtGui, QtSql
import datetime


class NewSubscription(QtGui.QDialog):
    def __init__(self, parent=None):
        QtGui.QDialog.__init__(self, parent)
        self.setWindowTitle(u'添加认购信息')
        self.setWindowIcon(QtGui.QIcon('icons/tent.png'))
        layout = QtGui.QGridLayout()
        layout.addWidget(QtGui.QLabel(u'客户类型'), 0, 0, 1, 1)
        q = QtSql.QSqlQuery('SELECT TYPE_NAME FROM CLIENT_TYPE')
        names = []
        while q.next():
            names.append(q.value(0).toString())
        self.clientType = QtGui.QComboBox()
        if names:
            self.clientType.addItems(names)
        layout.addWidget(self.clientType, 0, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'委托人名称'), 1, 0, 1, 1)
        self.clientname = QtGui.QComboBox()
        clientnames=[]
        q = QtSql.QSqlQuery('SELECT DISTINCT CLIENT_NAME FROM LIABILITY')
        while q.next():
            clientnames.append(q.value(0).toString())
        if clientnames:
            self.clientname.addItems(clientnames)
        self.clientname.setEditable(True)
        layout.addWidget(self.clientname, 1, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'销售类型：'),2,0,1,1)
        self.salebtn = QtGui.QButtonGroup()
        self.rbDirect = QtGui.QRadioButton(u'直销(A)')
        self.rbIndirect = QtGui.QRadioButton(u'代销(B)')
        self.salebtn.addButton(self.rbDirect)
        self.salebtn.addButton(self.rbIndirect)
        self.rbDirect.setChecked(True)
        self.gbsaletype = QtGui.QGroupBox()
        layout_gbsaletype = QtGui.QHBoxLayout()
        layout_gbsaletype.addWidget(self.rbDirect)
        layout_gbsaletype.addWidget(self.rbIndirect)
        self.gbsaletype.setLayout(layout_gbsaletype)
        layout.addWidget(self.gbsaletype, 2, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'认购金额(元)'),3,0,1,1)
        self.amount = QtGui.QLineEdit()
        self.amount.setValidator(QtGui.QDoubleValidator(0., 10000000000., 2))
        layout.addWidget(self.amount, 3, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'预期收益率(%)'), 4, 0, 1, 1)
        self.rtn = QtGui.QLineEdit()
        self.rtn.setValidator(QtGui.QDoubleValidator(0., 100., 2))
        layout.addWidget(self.rtn, 4, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'认购日'), 5, 0, 1, 1)
        self.subdate = QtGui.QDateEdit(datetime.date.today())
        self.subdate.setCalendarPopup(True)
        layout.addWidget(self.subdate, 5, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'封闭期起始日'), 6, 0, 1, 1)
        self.settledate = QtGui.QDateEdit(datetime.date.today())
        self.settledate.setCalendarPopup(True)
        layout.addWidget(self.settledate, 6, 1, 1, 1)
        self.gbtenor = QtGui.QGroupBox(u'认购期限')
        self.tenorbtn = QtGui.QButtonGroup()
        self.rbX = QtGui.QRadioButton(u'标准期限(X型)')
        self.rbY = QtGui.QRadioButton(u'订制期限(Y型)')
        self.rbH = QtGui.QRadioButton(u'活期(H型)')
        self.tenorbtn.addButton(self.rbX)
        self.tenorbtn.addButton(self.rbY)
        self.tenorbtn.addButton(self.rbH)
        self.tenorbtn.buttonClicked.connect(self.tenorbtn_clicked)
        self.rbX.setChecked(True)
        layout_tenor = QtGui.QGridLayout()
        layout_tenor.addWidget(self.rbX, 0, 0, 1, 1)
        layout_tenor.addWidget(self.rbY, 1, 0, 1, 1)
        layout_tenor.addWidget(self.rbH, 2, 0, 1, 1)
        self.xtenors = QtGui.QComboBox()
        self.xtenors.addItems(['14', '30', '60', '90', '120', '150', '180', '210', '240', '270', '300', '330', '360', '720'])
        layout_tenor.addWidget(self.xtenors, 0, 1, 1, 1)
        layout_tenor.addWidget(QtGui.QLabel(u'天'), 0, 2, 1, 1)
        self.ytenors = QtGui.QLineEdit()
        self.ytenors.setEnabled(False)
        self.ytenors.setValidator(QtGui.QIntValidator())
        layout_tenor.addWidget(self.ytenors, 1, 1, 1, 1)
        layout_tenor.addWidget(QtGui.QLabel(u'天'), 1, 2, 1, 1)
        self.gbtenor.setLayout(layout_tenor)
        layout.addWidget(self.gbtenor, 7, 0, 1, 2)
        layout.addWidget(QtGui.QLabel(u'封闭期到期日'), 8, 0, 1, 1)
        self.expdate = QtGui.QDateEdit(datetime.date.today())
        self.expdate.setCalendarPopup(True)
        layout.addWidget(self.expdate, 8, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'到期操作'), 9, 0, 1, 1)
        self.expops = QtGui.QComboBox()
        q = QtSql.QSqlQuery('SELECT OPS_NAME FROM EXPOPS_TYPE')
        opstypes = []
        while q.next():
            opstypes.append(q.value(0).toString())
        if opstypes:
            self.expops.addItems(opstypes)
        layout.addWidget(self.expops, 9, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'申请书编号'), 10, 0, 1, 1)
        self.subcode = QtGui.QLineEdit()
        layout.addWidget(self.subcode, 10, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'到期本息'), 11, 0, 1, 1)
        self.totalrtn = QtGui.QLineEdit()
        self.totalrtn.setEnabled(False)
        layout.addWidget(self.totalrtn, 11, 1, 1, 1)
        layout.addWidget(QtGui.QLabel(u'备注'), 12, 0, 1, 1)
        self.comment = QtGui.QLineEdit()
        layout.addWidget(self.comment, 12, 1, 1, 1)
        layout_okcancel = QtGui.QHBoxLayout()
        self.cancel = QtGui.QPushButton(u'取消')
        self.cancel.clicked.connect(self.close)
        layout_okcancel.addWidget(self.cancel)
        self.ok = QtGui.QPushButton(u'确定')
        self.ok.clicked.connect(self.accept)
        layout_okcancel.addWidget(self.ok)
        layout.addLayout(layout_okcancel, 13, 0, 1, 2)
        self.setLayout(layout)

    def tenorbtn_clicked(self, *args, **kwargs):
        if self.rbX.isChecked():
            self.ytenors.setEnabled(False)
            self.xtenors.setEnabled(True)
        elif self.rbY.isChecked():
            self.ytenors.setEnabled(True)
            self.xtenors.setEnabled(False)
        else:
            self.ytenors.setEnabled(False)
            self.xtenors.setEditable(False)

